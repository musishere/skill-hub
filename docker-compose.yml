version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: skillhub-postgres
    environment:
      POSTGRES_DB: skillhub
      POSTGRES_USER: skillhub_user
      POSTGRES_PASSWORD: skillhub_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database-setup-sql.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - skillhub-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: skillhub-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - skillhub-network

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: skillhub-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: skillhub_user
      RABBITMQ_DEFAULT_PASS: skillhub_password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - skillhub-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: skillhub-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://skillhub_user:skillhub_password@postgres:5432/skillhub
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://skillhub_user:skillhub_password@rabbitmq:5672
      JWT_SECRET: your-jwt-secret-here
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - skillhub-network
    restart: unless-stopped

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: skillhub-frontend
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://backend:3000
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - skillhub-network
    restart: unless-stopped

  # Admin Panel
  admin-panel:
    build:
      context: ./admin-panel
      dockerfile: Dockerfile
    container_name: skillhub-admin
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://backend:3000
    ports:
      - "3002:3000"
    depends_on:
      - backend
    networks:
      - skillhub-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: skillhub-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
      - admin-panel
    networks:
      - skillhub-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  skillhub-network:
    driver: bridge
